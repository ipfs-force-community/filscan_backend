// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gozelle/gin"
	"gitlab.forceup.in/fil-data-factory/filscan-backend/injector"
	"gitlab.forceup.in/fil-data-factory/filscan-backend/modules/common/config"
	"gitlab.forceup.in/fil-data-factory/filscan-backend/pkg/redis"
)

// Injectors from wire.go:

func wireApp(conf *config.Config) (*gin.Engine, func(), error) {
	adapter, err := injector.NewLondobellAdapter(conf)
	if err != nil {
		return nil, nil, err
	}
	client, err := injector.NewAliMsgClient(conf)
	if err != nil {
		return nil, nil, err
	}
	clientClient, err := injector.NewAliCallClient(conf)
	if err != nil {
		return nil, nil, err
	}
	mailClient, err := injector.NewMailClient(conf)
	if err != nil {
		return nil, nil, err
	}
	notify := injector.NewNotify(conf, client, clientClient, mailClient)
	db, cleanup, err := injector.NewGormDB(conf)
	if err != nil {
		return nil, nil, err
	}
	redisRedis := redis.NewRedis(conf)
	globalBiz := injector.NewGlobalBiz(conf, db, adapter, redisRedis)
	watcherBiz := injector.NewWatcherBiz(db, adapter, redisRedis)
	engine := newApp(conf, adapter, notify, globalBiz, watcherBiz)
	return engine, func() {
		cleanup()
	}, nil
}
